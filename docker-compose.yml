services:
  redis:
    image: redis:latest
    container_name: vetology-redis
    ports:
      - "6379:6379"
  kafka:
    image: apache/kafka:latest
    container_name: vetology-kafka
    attach: false
    ports:
      - "9092:9092" #internal listener
      - "9094:9094" #external listener
    environment:
      - KAFKA_NODE_ID=1
      - KAFKA_PROCESS_ROLES=broker,controller
      - KAFKA_LISTENERS=PLAINTEXT://:9092,EXTERNAL://:9094,CONTROLLER://:9093
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,EXTERNAL://localhost:9094
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT,CONTROLLER:PLAINTEXT
      - KAFKA_INTER_BROKER_LISTENER_NAME=PLAINTEXT
      - KAFKA_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CONTROLLER_QUORUM_VOTERS=1@kafka:9093
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
      - KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR=1
      - KAFKA_TRANSACTION_STATE_LOG_MIN_ISR=1
      - KAFKA_AUTO_CREATE_TOPICS_ENABLE=true
    healthcheck:
      test: ["CMD-SHELL", "nc -z localhost 9092 || exit 1"]
      interval: 5s
      timeout: 5s
      retries: 30
  worker:
    build: ./worker/
    command: celery -A tasks worker -l info -P prefork --concurrency=4
    environment:
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      - bridge
  bridge:
    build: ./bridge/
    environment:
      - REDIS_URL=redis://redis:6379/0
      - BROKER_NAME=kafka:9092
      - TOPIC_NAME=quickstart-events
      - KAFKA_GROUP_ID=vetology-test
    depends_on:
      kafka:
        condition: service_healthy
      redis:
        condition: service_started
    ports: ["9108:9108"]
  prometheus:
    image: prom/prometheus:latest
    container_name: vetology-prometheus
    ports:
      - 9090:9090
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro